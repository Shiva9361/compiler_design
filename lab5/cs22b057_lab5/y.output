
Grammar
rule 1    S -> A S
rule 2    S ->		/* empty */
rule 3    A -> IDEN EQUAL EXPR ';'
rule 4    A -> EXPR ';'
rule 5    A -> error ';'
rule 6    EXPR -> EXPR PLUS TERM
rule 7    EXPR -> EXPR MINUS TERM
rule 8    EXPR -> TERM
rule 9    TERM -> TERM STAR FAC
rule 10   TERM -> TERM DIV FAC
rule 11   TERM -> TERM MOD FACI
rule 12   TERM -> FAC
rule 13   FAC -> INT
rule 14   FAC -> MINUS INT
rule 15   FAC -> FLOAT
rule 16   FAC -> MINUS FLOAT
rule 17   FAC -> IDEN
rule 18   FAC -> MINUS IDEN
rule 19   FAC -> LPAREN EXPR RPAREN
rule 20   FAC -> LPAREN EXPR error
rule 21   FACI -> INT
rule 22   FACI -> MINUS INT
rule 23   FACI -> FLOAT
rule 24   FACI -> MINUS FLOAT
rule 25   FACI -> IDEN
rule 26   FACI -> MINUS IDEN
rule 27   FACI -> LPAREN EXPR RPAREN
rule 28   FACI -> LPAREN EXPR error

Terminals, with rules where they appear

$ (-1)
';' (59) 3 4 5
error (256) 5 20 28
IDEN (258) 3 17 18 25 26
INT (259) 13 14 21 22
FLOAT (260) 15 16 23 24
PLUS (261) 6
MINUS (262) 7 14 16 18 22 24 26
STAR (263) 9
DIV (264) 10
EQUAL (265) 3
MOD (266) 11
LPAREN (267) 19 20 27 28
RPAREN (268) 19 27

Nonterminals, with rules where they appear

S (15)
    on left: 1 2, on right: 1
A (16)
    on left: 3 4 5, on right: 1
EXPR (17)
    on left: 6 7 8, on right: 3 4 6 7 19 20 27 28
TERM (18)
    on left: 9 10 11 12, on right: 6 7 8 9 10 11
FAC (19)
    on left: 13 14 15 16 17 18 19 20, on right: 9 10 12
FACI (20)
    on left: 21 22 23 24 25 26 27 28, on right: 11


state 0

    error	shift, and go to state 1
    IDEN	shift, and go to state 2
    INT 	shift, and go to state 3
    FLOAT	shift, and go to state 4
    MINUS	shift, and go to state 5
    LPAREN	shift, and go to state 6

    $   	reduce using rule 2 (S)

    S   	go to state 45
    A   	go to state 7
    EXPR	go to state 8
    TERM	go to state 9
    FAC 	go to state 10



state 1

    A  ->  error . ';'   (rule 5)

    ';' 	shift, and go to state 11



state 2

    A  ->  IDEN . EQUAL EXPR ';'   (rule 3)
    FAC  ->  IDEN .   (rule 17)

    EQUAL	shift, and go to state 12

    $default	reduce using rule 17 (FAC)



state 3

    FAC  ->  INT .   (rule 13)

    $default	reduce using rule 13 (FAC)



state 4

    FAC  ->  FLOAT .   (rule 15)

    $default	reduce using rule 15 (FAC)



state 5

    FAC  ->  MINUS . INT   (rule 14)
    FAC  ->  MINUS . FLOAT   (rule 16)
    FAC  ->  MINUS . IDEN   (rule 18)

    IDEN	shift, and go to state 13
    INT 	shift, and go to state 14
    FLOAT	shift, and go to state 15



state 6

    FAC  ->  LPAREN . EXPR RPAREN   (rule 19)
    FAC  ->  LPAREN . EXPR error   (rule 20)

    IDEN	shift, and go to state 16
    INT 	shift, and go to state 3
    FLOAT	shift, and go to state 4
    MINUS	shift, and go to state 5
    LPAREN	shift, and go to state 6

    EXPR	go to state 17
    TERM	go to state 9
    FAC 	go to state 10



state 7

    S  ->  A . S   (rule 1)

    error	shift, and go to state 1
    IDEN	shift, and go to state 2
    INT 	shift, and go to state 3
    FLOAT	shift, and go to state 4
    MINUS	shift, and go to state 5
    LPAREN	shift, and go to state 6

    $   	reduce using rule 2 (S)

    S   	go to state 18
    A   	go to state 7
    EXPR	go to state 8
    TERM	go to state 9
    FAC 	go to state 10



state 8

    A  ->  EXPR . ';'   (rule 4)
    EXPR  ->  EXPR . PLUS TERM   (rule 6)
    EXPR  ->  EXPR . MINUS TERM   (rule 7)

    PLUS	shift, and go to state 19
    MINUS	shift, and go to state 20
    ';' 	shift, and go to state 21



state 9

    EXPR  ->  TERM .   (rule 8)
    TERM  ->  TERM . STAR FAC   (rule 9)
    TERM  ->  TERM . DIV FAC   (rule 10)
    TERM  ->  TERM . MOD FACI   (rule 11)

    STAR	shift, and go to state 22
    DIV 	shift, and go to state 23
    MOD 	shift, and go to state 24

    $default	reduce using rule 8 (EXPR)



state 10

    TERM  ->  FAC .   (rule 12)

    $default	reduce using rule 12 (TERM)



state 11

    A  ->  error ';' .   (rule 5)

    $default	reduce using rule 5 (A)



state 12

    A  ->  IDEN EQUAL . EXPR ';'   (rule 3)

    IDEN	shift, and go to state 16
    INT 	shift, and go to state 3
    FLOAT	shift, and go to state 4
    MINUS	shift, and go to state 5
    LPAREN	shift, and go to state 6

    EXPR	go to state 25
    TERM	go to state 9
    FAC 	go to state 10



state 13

    FAC  ->  MINUS IDEN .   (rule 18)

    $default	reduce using rule 18 (FAC)



state 14

    FAC  ->  MINUS INT .   (rule 14)

    $default	reduce using rule 14 (FAC)



state 15

    FAC  ->  MINUS FLOAT .   (rule 16)

    $default	reduce using rule 16 (FAC)



state 16

    FAC  ->  IDEN .   (rule 17)

    $default	reduce using rule 17 (FAC)



state 17

    EXPR  ->  EXPR . PLUS TERM   (rule 6)
    EXPR  ->  EXPR . MINUS TERM   (rule 7)
    FAC  ->  LPAREN EXPR . RPAREN   (rule 19)
    FAC  ->  LPAREN EXPR . error   (rule 20)

    error	shift, and go to state 26
    PLUS	shift, and go to state 19
    MINUS	shift, and go to state 20
    RPAREN	shift, and go to state 27



state 18

    S  ->  A S .   (rule 1)

    $default	reduce using rule 1 (S)



state 19

    EXPR  ->  EXPR PLUS . TERM   (rule 6)

    IDEN	shift, and go to state 16
    INT 	shift, and go to state 3
    FLOAT	shift, and go to state 4
    MINUS	shift, and go to state 5
    LPAREN	shift, and go to state 6

    TERM	go to state 28
    FAC 	go to state 10



state 20

    EXPR  ->  EXPR MINUS . TERM   (rule 7)

    IDEN	shift, and go to state 16
    INT 	shift, and go to state 3
    FLOAT	shift, and go to state 4
    MINUS	shift, and go to state 5
    LPAREN	shift, and go to state 6

    TERM	go to state 29
    FAC 	go to state 10



state 21

    A  ->  EXPR ';' .   (rule 4)

    $default	reduce using rule 4 (A)



state 22

    TERM  ->  TERM STAR . FAC   (rule 9)

    IDEN	shift, and go to state 16
    INT 	shift, and go to state 3
    FLOAT	shift, and go to state 4
    MINUS	shift, and go to state 5
    LPAREN	shift, and go to state 6

    FAC 	go to state 30



state 23

    TERM  ->  TERM DIV . FAC   (rule 10)

    IDEN	shift, and go to state 16
    INT 	shift, and go to state 3
    FLOAT	shift, and go to state 4
    MINUS	shift, and go to state 5
    LPAREN	shift, and go to state 6

    FAC 	go to state 31



state 24

    TERM  ->  TERM MOD . FACI   (rule 11)

    IDEN	shift, and go to state 32
    INT 	shift, and go to state 33
    FLOAT	shift, and go to state 34
    MINUS	shift, and go to state 35
    LPAREN	shift, and go to state 36

    FACI	go to state 37



state 25

    A  ->  IDEN EQUAL EXPR . ';'   (rule 3)
    EXPR  ->  EXPR . PLUS TERM   (rule 6)
    EXPR  ->  EXPR . MINUS TERM   (rule 7)

    PLUS	shift, and go to state 19
    MINUS	shift, and go to state 20
    ';' 	shift, and go to state 38



state 26

    FAC  ->  LPAREN EXPR error .   (rule 20)

    $default	reduce using rule 20 (FAC)



state 27

    FAC  ->  LPAREN EXPR RPAREN .   (rule 19)

    $default	reduce using rule 19 (FAC)



state 28

    EXPR  ->  EXPR PLUS TERM .   (rule 6)
    TERM  ->  TERM . STAR FAC   (rule 9)
    TERM  ->  TERM . DIV FAC   (rule 10)
    TERM  ->  TERM . MOD FACI   (rule 11)

    STAR	shift, and go to state 22
    DIV 	shift, and go to state 23
    MOD 	shift, and go to state 24

    $default	reduce using rule 6 (EXPR)



state 29

    EXPR  ->  EXPR MINUS TERM .   (rule 7)
    TERM  ->  TERM . STAR FAC   (rule 9)
    TERM  ->  TERM . DIV FAC   (rule 10)
    TERM  ->  TERM . MOD FACI   (rule 11)

    STAR	shift, and go to state 22
    DIV 	shift, and go to state 23
    MOD 	shift, and go to state 24

    $default	reduce using rule 7 (EXPR)



state 30

    TERM  ->  TERM STAR FAC .   (rule 9)

    $default	reduce using rule 9 (TERM)



state 31

    TERM  ->  TERM DIV FAC .   (rule 10)

    $default	reduce using rule 10 (TERM)



state 32

    FACI  ->  IDEN .   (rule 25)

    $default	reduce using rule 25 (FACI)



state 33

    FACI  ->  INT .   (rule 21)

    $default	reduce using rule 21 (FACI)



state 34

    FACI  ->  FLOAT .   (rule 23)

    $default	reduce using rule 23 (FACI)



state 35

    FACI  ->  MINUS . INT   (rule 22)
    FACI  ->  MINUS . FLOAT   (rule 24)
    FACI  ->  MINUS . IDEN   (rule 26)

    IDEN	shift, and go to state 39
    INT 	shift, and go to state 40
    FLOAT	shift, and go to state 41



state 36

    FACI  ->  LPAREN . EXPR RPAREN   (rule 27)
    FACI  ->  LPAREN . EXPR error   (rule 28)

    IDEN	shift, and go to state 16
    INT 	shift, and go to state 3
    FLOAT	shift, and go to state 4
    MINUS	shift, and go to state 5
    LPAREN	shift, and go to state 6

    EXPR	go to state 42
    TERM	go to state 9
    FAC 	go to state 10



state 37

    TERM  ->  TERM MOD FACI .   (rule 11)

    $default	reduce using rule 11 (TERM)



state 38

    A  ->  IDEN EQUAL EXPR ';' .   (rule 3)

    $default	reduce using rule 3 (A)



state 39

    FACI  ->  MINUS IDEN .   (rule 26)

    $default	reduce using rule 26 (FACI)



state 40

    FACI  ->  MINUS INT .   (rule 22)

    $default	reduce using rule 22 (FACI)



state 41

    FACI  ->  MINUS FLOAT .   (rule 24)

    $default	reduce using rule 24 (FACI)



state 42

    EXPR  ->  EXPR . PLUS TERM   (rule 6)
    EXPR  ->  EXPR . MINUS TERM   (rule 7)
    FACI  ->  LPAREN EXPR . RPAREN   (rule 27)
    FACI  ->  LPAREN EXPR . error   (rule 28)

    error	shift, and go to state 43
    PLUS	shift, and go to state 19
    MINUS	shift, and go to state 20
    RPAREN	shift, and go to state 44



state 43

    FACI  ->  LPAREN EXPR error .   (rule 28)

    $default	reduce using rule 28 (FACI)



state 44

    FACI  ->  LPAREN EXPR RPAREN .   (rule 27)

    $default	reduce using rule 27 (FACI)



state 45

    $   	go to state 46



state 46

    $   	go to state 47



state 47

    $default	accept
