

Terminals which are not used:

   UMINUS
   EOF


Conflict in state 49 between rule 31 and token '+' resolved as reduce.
Conflict in state 49 between rule 31 and token '-' resolved as reduce.
Conflict in state 49 between rule 31 and token '/' resolved as shift.
Conflict in state 49 between rule 31 and token '*' resolved as shift.
Conflict in state 49 between rule 31 and token '%' resolved as shift.
Conflict in state 50 between rule 32 and token '+' resolved as reduce.
Conflict in state 50 between rule 32 and token '-' resolved as reduce.
Conflict in state 50 between rule 32 and token '/' resolved as shift.
Conflict in state 50 between rule 32 and token '*' resolved as shift.
Conflict in state 50 between rule 32 and token '%' resolved as shift.
Conflict in state 51 between rule 34 and token '+' resolved as reduce.
Conflict in state 51 between rule 34 and token '-' resolved as reduce.
Conflict in state 51 between rule 34 and token '/' resolved as reduce.
Conflict in state 51 between rule 34 and token '*' resolved as reduce.
Conflict in state 51 between rule 34 and token '%' resolved as reduce.
Conflict in state 52 between rule 33 and token '+' resolved as reduce.
Conflict in state 52 between rule 33 and token '-' resolved as reduce.
Conflict in state 52 between rule 33 and token '/' resolved as reduce.
Conflict in state 52 between rule 33 and token '*' resolved as reduce.
Conflict in state 52 between rule 33 and token '%' resolved as reduce.
Conflict in state 53 between rule 35 and token '+' resolved as reduce.
Conflict in state 53 between rule 35 and token '-' resolved as reduce.
Conflict in state 53 between rule 35 and token '/' resolved as reduce.
Conflict in state 53 between rule 35 and token '*' resolved as reduce.
Conflict in state 53 between rule 35 and token '%' resolved as reduce.
Conflict in state 92 between rule 18 and token OR resolved as reduce.
Conflict in state 92 between rule 18 and token AND resolved as shift.
Conflict in state 93 between rule 19 and token OR resolved as reduce.
Conflict in state 93 between rule 19 and token AND resolved as reduce.
Conflict in state 94 between rule 3 and token ELSE resolved as shift.

Grammar
rule 1    S -> STMNTS M
rule 2    A -> ASNEXPR ';'
rule 3    A -> IF '(' BOOLEXPR ')' M A
rule 4    A -> IF '(' BOOLEXPR ')' M A ELSE NN M A
rule 5    A -> IF error
rule 6    A -> WHILE M '(' BOOLEXPR ')' M A
rule 7    A -> '{' STMNTS '}'
rule 8    A -> EXPR ';'
rule 9    A -> EXPR error
rule 10   STMNTS -> STMNTS M A
rule 11   STMNTS -> A M
rule 12   STMNTS -> STMNTS error
rule 13   ASSGN -> '='
rule 14   ASSGN -> PASN
rule 15   ASSGN -> MASN
rule 16   ASSGN -> DASN
rule 17   ASSGN -> SASN
rule 18   BOOLEXPR -> BOOLEXPR OR M BOOLEXPR
rule 19   BOOLEXPR -> BOOLEXPR AND M BOOLEXPR
rule 20   BOOLEXPR -> EXPR LT EXPR
rule 21   BOOLEXPR -> EXPR GT EXPR
rule 22   BOOLEXPR -> EXPR EQ EXPR
rule 23   BOOLEXPR -> EXPR NE EXPR
rule 24   BOOLEXPR -> EXPR LE EXPR
rule 25   BOOLEXPR -> EXPR GE EXPR
rule 26   BOOLEXPR -> TR
rule 27   BOOLEXPR -> FL
rule 28   M ->		/* empty */
rule 29   NN ->		/* empty */
rule 30   ASNEXPR -> EXPR ASSGN EXPR
rule 31   EXPR -> EXPR '+' EXPR
rule 32   EXPR -> EXPR '-' EXPR
rule 33   EXPR -> EXPR '*' EXPR
rule 34   EXPR -> EXPR '/' EXPR
rule 35   EXPR -> EXPR '%' EXPR
rule 36   EXPR -> '(' EXPR ')'
rule 37   EXPR -> '(' EXPR error
rule 38   EXPR -> TERM
rule 39   TERM -> UN OPR IDEN B
rule 40   TERM -> UN IDEN OPR B
rule 41   TERM -> UN NUM C
rule 42   TERM -> UN IDEN C
rule 43   TERM -> UN INC NUM
rule 44   TERM -> UN DEC NUM
rule 45   TERM -> UN NUM INC
rule 46   TERM -> UN NUM DEC
rule 47   OPR -> INC
rule 48   OPR -> DEC
rule 49   B -> OPR
rule 50   B -> IDEN
rule 51   B -> NUM
rule 52   B ->		/* empty */
rule 53   C -> IDEN
rule 54   C -> NUM
rule 55   C ->		/* empty */
rule 56   UN -> '-'
rule 57   UN ->		/* empty */

Terminals, with rules where they appear

$ (-1)
'%' (37) 35
'(' (40) 3 4 6 36 37
')' (41) 3 4 6 36
'*' (42) 33
'+' (43) 31
'-' (45) 32 56
'/' (47) 34
';' (59) 2 8
'=' (61) 13
'{' (123) 7
'}' (125) 7
error (256) 5 9 12 37
PASN (258) 14
MASN (259) 15
DASN (260) 16
SASN (261) 17
OR (262) 18
AND (263) 19
LT (264) 20
GT (265) 21
LE (266) 24
GE (267) 25
EQ (268) 22
NE (269) 23
INC (270) 43 45 47
DEC (271) 44 46 48
UMINUS (272)
ELSE (273) 4
IDEN (274) 39 40 42 50 53
NUM (275) 41 43 44 45 46 51 54
IF (276) 3 4 5
TR (277) 26
FL (278) 27
WHILE (279) 6
EOF (280)

Nonterminals, with rules where they appear

S (37)
    on left: 1
A (38)
    on left: 2 3 4 5 6 7 8 9, on right: 3 4 6 10 11
STMNTS (39)
    on left: 10 11 12, on right: 1 7 10 12
ASSGN (40)
    on left: 13 14 15 16 17, on right: 30
BOOLEXPR (41)
    on left: 18 19 20 21 22 23 24 25 26 27, on right: 3 4 6 18 19
M (42)
    on left: 28, on right: 1 3 4 6 10 11 18 19
NN (43)
    on left: 29, on right: 4
ASNEXPR (44)
    on left: 30, on right: 2
EXPR (45)
    on left: 31 32 33 34 35 36 37 38, on right: 8 9 20 21 22 23 24
    25 30 31 32 33 34 35 36 37
TERM (46)
    on left: 39 40 41 42 43 44 45 46, on right: 38
OPR (47)
    on left: 47 48, on right: 39 40 49
B (48)
    on left: 49 50 51 52, on right: 39 40
C (49)
    on left: 53 54 55, on right: 41 42
UN (50)
    on left: 56 57, on right: 39 40 41 42 43 44 45 46


state 0

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 57 (UN)

    S   	go to state 101
    A   	go to state 6
    STMNTS	go to state 7
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 1

    UN  ->  '-' .   (rule 56)

    $default	reduce using rule 56 (UN)



state 2

    EXPR  ->  '(' . EXPR ')'   (rule 36)
    EXPR  ->  '(' . EXPR error   (rule 37)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 12
    TERM	go to state 10
    UN  	go to state 11



state 3

    A  ->  IF . '(' BOOLEXPR ')' M A   (rule 3)
    A  ->  IF . '(' BOOLEXPR ')' M A ELSE NN M A   (rule 4)
    A  ->  IF . error   (rule 5)

    error	shift, and go to state 13
    '(' 	shift, and go to state 14



state 4

    A  ->  WHILE . M '(' BOOLEXPR ')' M A   (rule 6)

    $default	reduce using rule 28 (M)

    M   	go to state 15



state 5

    A  ->  '{' . STMNTS '}'   (rule 7)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 57 (UN)

    A   	go to state 6
    STMNTS	go to state 16
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 6

    STMNTS  ->  A . M   (rule 11)

    $default	reduce using rule 28 (M)

    M   	go to state 17



state 7

    S  ->  STMNTS . M   (rule 1)
    STMNTS  ->  STMNTS . M A   (rule 10)
    STMNTS  ->  STMNTS . error   (rule 12)

    error	shift, and go to state 18

    $   	reduce using rule 28 (M)
    '-' 	reduce using rule 28 (M)
    INC 	reduce using rule 28 (M)
    DEC 	reduce using rule 28 (M)
    '(' 	reduce using rule 28 (M)
    IDEN	reduce using rule 28 (M)
    NUM 	reduce using rule 28 (M)
    IF  	reduce using rule 28 (M)
    WHILE	reduce using rule 28 (M)

    M   	go to state 19



state 8

    A  ->  ASNEXPR . ';'   (rule 2)

    ';' 	shift, and go to state 20



state 9

    A  ->  EXPR . ';'   (rule 8)
    A  ->  EXPR . error   (rule 9)
    ASNEXPR  ->  EXPR . ASSGN EXPR   (rule 30)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    error	shift, and go to state 21
    PASN	shift, and go to state 22
    MASN	shift, and go to state 23
    DASN	shift, and go to state 24
    SASN	shift, and go to state 25
    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30
    ';' 	shift, and go to state 31
    '=' 	shift, and go to state 32

    ASSGN	go to state 33



state 10

    EXPR  ->  TERM .   (rule 38)

    $default	reduce using rule 38 (EXPR)



state 11

    TERM  ->  UN . OPR IDEN B   (rule 39)
    TERM  ->  UN . IDEN OPR B   (rule 40)
    TERM  ->  UN . NUM C   (rule 41)
    TERM  ->  UN . IDEN C   (rule 42)
    TERM  ->  UN . INC NUM   (rule 43)
    TERM  ->  UN . DEC NUM   (rule 44)
    TERM  ->  UN . NUM INC   (rule 45)
    TERM  ->  UN . NUM DEC   (rule 46)

    INC 	shift, and go to state 34
    DEC 	shift, and go to state 35
    IDEN	shift, and go to state 36
    NUM 	shift, and go to state 37

    OPR 	go to state 38



state 12

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  '(' EXPR . ')'   (rule 36)
    EXPR  ->  '(' EXPR . error   (rule 37)

    error	shift, and go to state 39
    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30
    ')' 	shift, and go to state 40



state 13

    A  ->  IF error .   (rule 5)

    $default	reduce using rule 5 (A)



state 14

    A  ->  IF '(' . BOOLEXPR ')' M A   (rule 3)
    A  ->  IF '(' . BOOLEXPR ')' M A ELSE NN M A   (rule 4)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    TR  	shift, and go to state 41
    FL  	shift, and go to state 42

    $default	reduce using rule 57 (UN)

    BOOLEXPR	go to state 43
    EXPR	go to state 44
    TERM	go to state 10
    UN  	go to state 11



state 15

    A  ->  WHILE M . '(' BOOLEXPR ')' M A   (rule 6)

    '(' 	shift, and go to state 45



state 16

    A  ->  '{' STMNTS . '}'   (rule 7)
    STMNTS  ->  STMNTS . M A   (rule 10)
    STMNTS  ->  STMNTS . error   (rule 12)

    error	shift, and go to state 18
    '}' 	shift, and go to state 46

    '-' 	reduce using rule 28 (M)
    INC 	reduce using rule 28 (M)
    DEC 	reduce using rule 28 (M)
    '(' 	reduce using rule 28 (M)
    IDEN	reduce using rule 28 (M)
    NUM 	reduce using rule 28 (M)
    IF  	reduce using rule 28 (M)

    M   	go to state 47



state 17

    STMNTS  ->  A M .   (rule 11)

    $default	reduce using rule 11 (STMNTS)



state 18

    STMNTS  ->  STMNTS error .   (rule 12)

    $default	reduce using rule 12 (STMNTS)



state 19

    S  ->  STMNTS M .   (rule 1)
    STMNTS  ->  STMNTS M . A   (rule 10)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $   	reduce using rule 1 (S)
    WHILE	[reduce using rule 1 (S)]
    $default	reduce using rule 57 (UN)

    A   	go to state 48
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 20

    A  ->  ASNEXPR ';' .   (rule 2)

    $default	reduce using rule 2 (A)



state 21

    A  ->  EXPR error .   (rule 9)

    $default	reduce using rule 9 (A)



state 22

    ASSGN  ->  PASN .   (rule 14)

    $default	reduce using rule 14 (ASSGN)



state 23

    ASSGN  ->  MASN .   (rule 15)

    $default	reduce using rule 15 (ASSGN)



state 24

    ASSGN  ->  DASN .   (rule 16)

    $default	reduce using rule 16 (ASSGN)



state 25

    ASSGN  ->  SASN .   (rule 17)

    $default	reduce using rule 17 (ASSGN)



state 26

    EXPR  ->  EXPR '+' . EXPR   (rule 31)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 49
    TERM	go to state 10
    UN  	go to state 11



state 27

    EXPR  ->  EXPR '-' . EXPR   (rule 32)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 50
    TERM	go to state 10
    UN  	go to state 11



state 28

    EXPR  ->  EXPR '/' . EXPR   (rule 34)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 51
    TERM	go to state 10
    UN  	go to state 11



state 29

    EXPR  ->  EXPR '*' . EXPR   (rule 33)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 52
    TERM	go to state 10
    UN  	go to state 11



state 30

    EXPR  ->  EXPR '%' . EXPR   (rule 35)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 53
    TERM	go to state 10
    UN  	go to state 11



state 31

    A  ->  EXPR ';' .   (rule 8)

    $default	reduce using rule 8 (A)



state 32

    ASSGN  ->  '=' .   (rule 13)

    $default	reduce using rule 13 (ASSGN)



state 33

    ASNEXPR  ->  EXPR ASSGN . EXPR   (rule 30)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 54
    TERM	go to state 10
    UN  	go to state 11



state 34

    TERM  ->  UN INC . NUM   (rule 43)
    OPR  ->  INC .   (rule 47)

    NUM 	shift, and go to state 55

    $default	reduce using rule 47 (OPR)



state 35

    TERM  ->  UN DEC . NUM   (rule 44)
    OPR  ->  DEC .   (rule 48)

    NUM 	shift, and go to state 56

    $default	reduce using rule 48 (OPR)



state 36

    TERM  ->  UN IDEN . OPR B   (rule 40)
    TERM  ->  UN IDEN . C   (rule 42)

    INC 	shift, and go to state 57
    DEC 	shift, and go to state 58
    IDEN	shift, and go to state 59
    NUM 	shift, and go to state 60

    $default	reduce using rule 55 (C)

    OPR 	go to state 61
    C   	go to state 62



state 37

    TERM  ->  UN NUM . C   (rule 41)
    TERM  ->  UN NUM . INC   (rule 45)
    TERM  ->  UN NUM . DEC   (rule 46)

    INC 	shift, and go to state 63
    DEC 	shift, and go to state 64
    IDEN	shift, and go to state 59
    NUM 	shift, and go to state 60

    $default	reduce using rule 55 (C)

    C   	go to state 65



state 38

    TERM  ->  UN OPR . IDEN B   (rule 39)

    IDEN	shift, and go to state 66



state 39

    EXPR  ->  '(' EXPR error .   (rule 37)

    $default	reduce using rule 37 (EXPR)



state 40

    EXPR  ->  '(' EXPR ')' .   (rule 36)

    $default	reduce using rule 36 (EXPR)



state 41

    BOOLEXPR  ->  TR .   (rule 26)

    $default	reduce using rule 26 (BOOLEXPR)



state 42

    BOOLEXPR  ->  FL .   (rule 27)

    $default	reduce using rule 27 (BOOLEXPR)



state 43

    A  ->  IF '(' BOOLEXPR . ')' M A   (rule 3)
    A  ->  IF '(' BOOLEXPR . ')' M A ELSE NN M A   (rule 4)
    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 18)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 19)

    OR  	shift, and go to state 67
    AND 	shift, and go to state 68
    ')' 	shift, and go to state 69



state 44

    BOOLEXPR  ->  EXPR . LT EXPR   (rule 20)
    BOOLEXPR  ->  EXPR . GT EXPR   (rule 21)
    BOOLEXPR  ->  EXPR . EQ EXPR   (rule 22)
    BOOLEXPR  ->  EXPR . NE EXPR   (rule 23)
    BOOLEXPR  ->  EXPR . LE EXPR   (rule 24)
    BOOLEXPR  ->  EXPR . GE EXPR   (rule 25)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    LT  	shift, and go to state 70
    GT  	shift, and go to state 71
    LE  	shift, and go to state 72
    GE  	shift, and go to state 73
    EQ  	shift, and go to state 74
    NE  	shift, and go to state 75
    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30



state 45

    A  ->  WHILE M '(' . BOOLEXPR ')' M A   (rule 6)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    TR  	shift, and go to state 41
    FL  	shift, and go to state 42

    $default	reduce using rule 57 (UN)

    BOOLEXPR	go to state 76
    EXPR	go to state 44
    TERM	go to state 10
    UN  	go to state 11



state 46

    A  ->  '{' STMNTS '}' .   (rule 7)

    $default	reduce using rule 7 (A)



state 47

    STMNTS  ->  STMNTS M . A   (rule 10)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 57 (UN)

    A   	go to state 48
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 48

    STMNTS  ->  STMNTS M A .   (rule 10)

    $default	reduce using rule 10 (STMNTS)



state 49

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR '+' EXPR .   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 31 (EXPR)



state 50

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR '-' EXPR .   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 32 (EXPR)



state 51

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR '/' EXPR .   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)


    $default	reduce using rule 34 (EXPR)



state 52

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR '*' EXPR .   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)


    $default	reduce using rule 33 (EXPR)



state 53

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR '%' EXPR .   (rule 35)


    $default	reduce using rule 35 (EXPR)



state 54

    ASNEXPR  ->  EXPR ASSGN EXPR .   (rule 30)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 30 (ASNEXPR)



state 55

    TERM  ->  UN INC NUM .   (rule 43)

    $default	reduce using rule 43 (TERM)



state 56

    TERM  ->  UN DEC NUM .   (rule 44)

    $default	reduce using rule 44 (TERM)



state 57

    OPR  ->  INC .   (rule 47)

    $default	reduce using rule 47 (OPR)



state 58

    OPR  ->  DEC .   (rule 48)

    $default	reduce using rule 48 (OPR)



state 59

    C  ->  IDEN .   (rule 53)

    $default	reduce using rule 53 (C)



state 60

    C  ->  NUM .   (rule 54)

    $default	reduce using rule 54 (C)



state 61

    TERM  ->  UN IDEN OPR . B   (rule 40)

    INC 	shift, and go to state 57
    DEC 	shift, and go to state 58
    IDEN	shift, and go to state 77
    NUM 	shift, and go to state 78

    $default	reduce using rule 52 (B)

    OPR 	go to state 79
    B   	go to state 80



state 62

    TERM  ->  UN IDEN C .   (rule 42)

    $default	reduce using rule 42 (TERM)



state 63

    TERM  ->  UN NUM INC .   (rule 45)

    $default	reduce using rule 45 (TERM)



state 64

    TERM  ->  UN NUM DEC .   (rule 46)

    $default	reduce using rule 46 (TERM)



state 65

    TERM  ->  UN NUM C .   (rule 41)

    $default	reduce using rule 41 (TERM)



state 66

    TERM  ->  UN OPR IDEN . B   (rule 39)

    INC 	shift, and go to state 57
    DEC 	shift, and go to state 58
    IDEN	shift, and go to state 77
    NUM 	shift, and go to state 78

    $default	reduce using rule 52 (B)

    OPR 	go to state 79
    B   	go to state 81



state 67

    BOOLEXPR  ->  BOOLEXPR OR . M BOOLEXPR   (rule 18)

    $default	reduce using rule 28 (M)

    M   	go to state 82



state 68

    BOOLEXPR  ->  BOOLEXPR AND . M BOOLEXPR   (rule 19)

    $default	reduce using rule 28 (M)

    M   	go to state 83



state 69

    A  ->  IF '(' BOOLEXPR ')' . M A   (rule 3)
    A  ->  IF '(' BOOLEXPR ')' . M A ELSE NN M A   (rule 4)

    $default	reduce using rule 28 (M)

    M   	go to state 84



state 70

    BOOLEXPR  ->  EXPR LT . EXPR   (rule 20)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 85
    TERM	go to state 10
    UN  	go to state 11



state 71

    BOOLEXPR  ->  EXPR GT . EXPR   (rule 21)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 86
    TERM	go to state 10
    UN  	go to state 11



state 72

    BOOLEXPR  ->  EXPR LE . EXPR   (rule 24)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 87
    TERM	go to state 10
    UN  	go to state 11



state 73

    BOOLEXPR  ->  EXPR GE . EXPR   (rule 25)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 88
    TERM	go to state 10
    UN  	go to state 11



state 74

    BOOLEXPR  ->  EXPR EQ . EXPR   (rule 22)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 89
    TERM	go to state 10
    UN  	go to state 11



state 75

    BOOLEXPR  ->  EXPR NE . EXPR   (rule 23)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 57 (UN)

    EXPR	go to state 90
    TERM	go to state 10
    UN  	go to state 11



state 76

    A  ->  WHILE M '(' BOOLEXPR . ')' M A   (rule 6)
    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 18)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 19)

    OR  	shift, and go to state 67
    AND 	shift, and go to state 68
    ')' 	shift, and go to state 91



state 77

    B  ->  IDEN .   (rule 50)

    $default	reduce using rule 50 (B)



state 78

    B  ->  NUM .   (rule 51)

    $default	reduce using rule 51 (B)



state 79

    B  ->  OPR .   (rule 49)

    $default	reduce using rule 49 (B)



state 80

    TERM  ->  UN IDEN OPR B .   (rule 40)

    $default	reduce using rule 40 (TERM)



state 81

    TERM  ->  UN OPR IDEN B .   (rule 39)

    $default	reduce using rule 39 (TERM)



state 82

    BOOLEXPR  ->  BOOLEXPR OR M . BOOLEXPR   (rule 18)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    TR  	shift, and go to state 41
    FL  	shift, and go to state 42

    $default	reduce using rule 57 (UN)

    BOOLEXPR	go to state 92
    EXPR	go to state 44
    TERM	go to state 10
    UN  	go to state 11



state 83

    BOOLEXPR  ->  BOOLEXPR AND M . BOOLEXPR   (rule 19)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    TR  	shift, and go to state 41
    FL  	shift, and go to state 42

    $default	reduce using rule 57 (UN)

    BOOLEXPR	go to state 93
    EXPR	go to state 44
    TERM	go to state 10
    UN  	go to state 11



state 84

    A  ->  IF '(' BOOLEXPR ')' M . A   (rule 3)
    A  ->  IF '(' BOOLEXPR ')' M . A ELSE NN M A   (rule 4)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 57 (UN)

    A   	go to state 94
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 85

    BOOLEXPR  ->  EXPR LT EXPR .   (rule 20)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 20 (BOOLEXPR)



state 86

    BOOLEXPR  ->  EXPR GT EXPR .   (rule 21)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 21 (BOOLEXPR)



state 87

    BOOLEXPR  ->  EXPR LE EXPR .   (rule 24)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 24 (BOOLEXPR)



state 88

    BOOLEXPR  ->  EXPR GE EXPR .   (rule 25)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 25 (BOOLEXPR)



state 89

    BOOLEXPR  ->  EXPR EQ EXPR .   (rule 22)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 22 (BOOLEXPR)



state 90

    BOOLEXPR  ->  EXPR NE EXPR .   (rule 23)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 23 (BOOLEXPR)



state 91

    A  ->  WHILE M '(' BOOLEXPR ')' . M A   (rule 6)

    $default	reduce using rule 28 (M)

    M   	go to state 95



state 92

    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 18)
    BOOLEXPR  ->  BOOLEXPR OR M BOOLEXPR .   (rule 18)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 19)

    AND 	shift, and go to state 68

    $default	reduce using rule 18 (BOOLEXPR)



state 93

    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 18)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 19)
    BOOLEXPR  ->  BOOLEXPR AND M BOOLEXPR .   (rule 19)


    $default	reduce using rule 19 (BOOLEXPR)



state 94

    A  ->  IF '(' BOOLEXPR ')' M A .   (rule 3)
    A  ->  IF '(' BOOLEXPR ')' M A . ELSE NN M A   (rule 4)

    ELSE	shift, and go to state 96

    $default	reduce using rule 3 (A)



state 95

    A  ->  WHILE M '(' BOOLEXPR ')' M . A   (rule 6)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 57 (UN)

    A   	go to state 97
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 96

    A  ->  IF '(' BOOLEXPR ')' M A ELSE . NN M A   (rule 4)

    $default	reduce using rule 29 (NN)

    NN  	go to state 98



state 97

    A  ->  WHILE M '(' BOOLEXPR ')' M A .   (rule 6)

    $default	reduce using rule 6 (A)



state 98

    A  ->  IF '(' BOOLEXPR ')' M A ELSE NN . M A   (rule 4)

    $default	reduce using rule 28 (M)

    M   	go to state 99



state 99

    A  ->  IF '(' BOOLEXPR ')' M A ELSE NN M . A   (rule 4)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 57 (UN)

    A   	go to state 100
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 100

    A  ->  IF '(' BOOLEXPR ')' M A ELSE NN M A .   (rule 4)

    $default	reduce using rule 4 (A)



state 101

    $   	go to state 102



state 102

    $   	go to state 103



state 103

    $default	accept
