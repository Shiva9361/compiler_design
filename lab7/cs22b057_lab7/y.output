

Terminals which are not used:

   UMINUS
   EOF


Conflict in state 50 between rule 31 and token '+' resolved as reduce.
Conflict in state 50 between rule 31 and token '-' resolved as reduce.
Conflict in state 50 between rule 31 and token '/' resolved as shift.
Conflict in state 50 between rule 31 and token '*' resolved as shift.
Conflict in state 50 between rule 31 and token '%' resolved as shift.
Conflict in state 51 between rule 32 and token '+' resolved as reduce.
Conflict in state 51 between rule 32 and token '-' resolved as reduce.
Conflict in state 51 between rule 32 and token '/' resolved as shift.
Conflict in state 51 between rule 32 and token '*' resolved as shift.
Conflict in state 51 between rule 32 and token '%' resolved as shift.
Conflict in state 52 between rule 34 and token '+' resolved as reduce.
Conflict in state 52 between rule 34 and token '-' resolved as reduce.
Conflict in state 52 between rule 34 and token '/' resolved as reduce.
Conflict in state 52 between rule 34 and token '*' resolved as reduce.
Conflict in state 52 between rule 34 and token '%' resolved as reduce.
Conflict in state 53 between rule 33 and token '+' resolved as reduce.
Conflict in state 53 between rule 33 and token '-' resolved as reduce.
Conflict in state 53 between rule 33 and token '/' resolved as reduce.
Conflict in state 53 between rule 33 and token '*' resolved as reduce.
Conflict in state 53 between rule 33 and token '%' resolved as reduce.
Conflict in state 54 between rule 35 and token '+' resolved as reduce.
Conflict in state 54 between rule 35 and token '-' resolved as reduce.
Conflict in state 54 between rule 35 and token '/' resolved as reduce.
Conflict in state 54 between rule 35 and token '*' resolved as reduce.
Conflict in state 54 between rule 35 and token '%' resolved as reduce.
Conflict in state 94 between rule 18 and token OR resolved as reduce.
Conflict in state 94 between rule 18 and token AND resolved as shift.
Conflict in state 95 between rule 19 and token OR resolved as reduce.
Conflict in state 95 between rule 19 and token AND resolved as reduce.
Conflict in state 96 between rule 3 and token ELSE resolved as shift.

Grammar
rule 1    S -> STMNTS M
rule 2    A -> ASNEXPR ';'
rule 3    A -> IF '(' BOOLEXPR ')' M A
rule 4    A -> IF '(' BOOLEXPR ')' M A ELSE NN M A
rule 5    A -> IF error
rule 6    A -> WHILE M '(' BOOLEXPR ')' M A
rule 7    A -> '{' STMNTS '}'
rule 8    A -> EXPR ';'
rule 9    A -> EXPR error
rule 10   STMNTS -> STMNTS M A
rule 11   STMNTS -> A M
rule 12   STMNTS -> STMNTS error
rule 13   ASSGN -> '='
rule 14   ASSGN -> PASN
rule 15   ASSGN -> MASN
rule 16   ASSGN -> DASN
rule 17   ASSGN -> SASN
rule 18   BOOLEXPR -> BOOLEXPR OR M BOOLEXPR
rule 19   BOOLEXPR -> BOOLEXPR AND M BOOLEXPR
rule 20   BOOLEXPR -> EXPR LT EXPR
rule 21   BOOLEXPR -> EXPR GT EXPR
rule 22   BOOLEXPR -> EXPR EQ EXPR
rule 23   BOOLEXPR -> EXPR NE EXPR
rule 24   BOOLEXPR -> EXPR LE EXPR
rule 25   BOOLEXPR -> EXPR GE EXPR
rule 26   BOOLEXPR -> TR
rule 27   BOOLEXPR -> FL
rule 28   M ->		/* empty */
rule 29   NN ->		/* empty */
rule 30   ASNEXPR -> EXPR ASSGN EXPR
rule 31   EXPR -> EXPR '+' EXPR
rule 32   EXPR -> EXPR '-' EXPR
rule 33   EXPR -> EXPR '*' EXPR
rule 34   EXPR -> EXPR '/' EXPR
rule 35   EXPR -> EXPR '%' EXPR
rule 36   EXPR -> '(' EXPR ')'
rule 37   EXPR -> '(' EXPR error
rule 38   EXPR -> EXPR OP ';'
rule 39   EXPR -> TERM
rule 40   OP -> '+'
rule 41   OP -> '-'
rule 42   OP -> '*'
rule 43   OP -> '/'
rule 44   OP -> '%'
rule 45   TERM -> UN OPR IDEN B
rule 46   TERM -> UN IDEN OPR B
rule 47   TERM -> UN NUM C
rule 48   TERM -> UN IDEN C
rule 49   TERM -> UN INC NUM
rule 50   TERM -> UN DEC NUM
rule 51   TERM -> UN NUM INC
rule 52   TERM -> UN NUM DEC
rule 53   OPR -> INC
rule 54   OPR -> DEC
rule 55   B -> OPR
rule 56   B -> IDEN
rule 57   B -> NUM
rule 58   B ->		/* empty */
rule 59   C -> IDEN
rule 60   C -> NUM
rule 61   C ->		/* empty */
rule 62   UN -> '-'
rule 63   UN ->		/* empty */

Terminals, with rules where they appear

$ (-1)
'%' (37) 35 44
'(' (40) 3 4 6 36 37
')' (41) 3 4 6 36
'*' (42) 33 42
'+' (43) 31 40
'-' (45) 32 41 62
'/' (47) 34 43
';' (59) 2 8 38
'=' (61) 13
'{' (123) 7
'}' (125) 7
error (256) 5 9 12 37
PASN (258) 14
MASN (259) 15
DASN (260) 16
SASN (261) 17
OR (262) 18
AND (263) 19
LT (264) 20
GT (265) 21
LE (266) 24
GE (267) 25
EQ (268) 22
NE (269) 23
INC (270) 49 51 53
DEC (271) 50 52 54
UMINUS (272)
ELSE (273) 4
IDEN (274) 45 46 48 56 59
NUM (275) 47 49 50 51 52 57 60
IF (276) 3 4 5
TR (277) 26
FL (278) 27
WHILE (279) 6
EOF (280)

Nonterminals, with rules where they appear

S (37)
    on left: 1
A (38)
    on left: 2 3 4 5 6 7 8 9, on right: 3 4 6 10 11
STMNTS (39)
    on left: 10 11 12, on right: 1 7 10 12
ASSGN (40)
    on left: 13 14 15 16 17, on right: 30
BOOLEXPR (41)
    on left: 18 19 20 21 22 23 24 25 26 27, on right: 3 4 6 18 19
M (42)
    on left: 28, on right: 1 3 4 6 10 11 18 19
NN (43)
    on left: 29, on right: 4
ASNEXPR (44)
    on left: 30, on right: 2
EXPR (45)
    on left: 31 32 33 34 35 36 37 38 39, on right: 8 9 20 21 22 23
    24 25 30 31 32 33 34 35 36 37 38
OP (46)
    on left: 40 41 42 43 44, on right: 38
TERM (47)
    on left: 45 46 47 48 49 50 51 52, on right: 39
OPR (48)
    on left: 53 54, on right: 45 46 55
B (49)
    on left: 55 56 57 58, on right: 45 46
C (50)
    on left: 59 60 61, on right: 47 48
UN (51)
    on left: 62 63, on right: 45 46 47 48 49 50 51 52


state 0

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 63 (UN)

    S   	go to state 103
    A   	go to state 6
    STMNTS	go to state 7
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 1

    UN  ->  '-' .   (rule 62)

    $default	reduce using rule 62 (UN)



state 2

    EXPR  ->  '(' . EXPR ')'   (rule 36)
    EXPR  ->  '(' . EXPR error   (rule 37)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 63 (UN)

    EXPR	go to state 12
    TERM	go to state 10
    UN  	go to state 11



state 3

    A  ->  IF . '(' BOOLEXPR ')' M A   (rule 3)
    A  ->  IF . '(' BOOLEXPR ')' M A ELSE NN M A   (rule 4)
    A  ->  IF . error   (rule 5)

    error	shift, and go to state 13
    '(' 	shift, and go to state 14



state 4

    A  ->  WHILE . M '(' BOOLEXPR ')' M A   (rule 6)

    $default	reduce using rule 28 (M)

    M   	go to state 15



state 5

    A  ->  '{' . STMNTS '}'   (rule 7)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 63 (UN)

    A   	go to state 6
    STMNTS	go to state 16
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 6

    STMNTS  ->  A . M   (rule 11)

    $default	reduce using rule 28 (M)

    M   	go to state 17



state 7

    S  ->  STMNTS . M   (rule 1)
    STMNTS  ->  STMNTS . M A   (rule 10)
    STMNTS  ->  STMNTS . error   (rule 12)

    error	shift, and go to state 18

    $   	reduce using rule 28 (M)
    '-' 	reduce using rule 28 (M)
    INC 	reduce using rule 28 (M)
    DEC 	reduce using rule 28 (M)
    '(' 	reduce using rule 28 (M)
    IDEN	reduce using rule 28 (M)
    NUM 	reduce using rule 28 (M)
    IF  	reduce using rule 28 (M)
    WHILE	reduce using rule 28 (M)

    M   	go to state 19



state 8

    A  ->  ASNEXPR . ';'   (rule 2)

    ';' 	shift, and go to state 20



state 9

    A  ->  EXPR . ';'   (rule 8)
    A  ->  EXPR . error   (rule 9)
    ASNEXPR  ->  EXPR . ASSGN EXPR   (rule 30)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    error	shift, and go to state 21
    PASN	shift, and go to state 22
    MASN	shift, and go to state 23
    DASN	shift, and go to state 24
    SASN	shift, and go to state 25
    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30
    ';' 	shift, and go to state 31
    '=' 	shift, and go to state 32

    ASSGN	go to state 33
    OP  	go to state 34



state 10

    EXPR  ->  TERM .   (rule 39)

    $default	reduce using rule 39 (EXPR)



state 11

    TERM  ->  UN . OPR IDEN B   (rule 45)
    TERM  ->  UN . IDEN OPR B   (rule 46)
    TERM  ->  UN . NUM C   (rule 47)
    TERM  ->  UN . IDEN C   (rule 48)
    TERM  ->  UN . INC NUM   (rule 49)
    TERM  ->  UN . DEC NUM   (rule 50)
    TERM  ->  UN . NUM INC   (rule 51)
    TERM  ->  UN . NUM DEC   (rule 52)

    INC 	shift, and go to state 35
    DEC 	shift, and go to state 36
    IDEN	shift, and go to state 37
    NUM 	shift, and go to state 38

    OPR 	go to state 39



state 12

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  '(' EXPR . ')'   (rule 36)
    EXPR  ->  '(' EXPR . error   (rule 37)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    error	shift, and go to state 40
    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30
    ')' 	shift, and go to state 41

    OP  	go to state 34



state 13

    A  ->  IF error .   (rule 5)

    $default	reduce using rule 5 (A)



state 14

    A  ->  IF '(' . BOOLEXPR ')' M A   (rule 3)
    A  ->  IF '(' . BOOLEXPR ')' M A ELSE NN M A   (rule 4)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    TR  	shift, and go to state 42
    FL  	shift, and go to state 43

    $default	reduce using rule 63 (UN)

    BOOLEXPR	go to state 44
    EXPR	go to state 45
    TERM	go to state 10
    UN  	go to state 11



state 15

    A  ->  WHILE M . '(' BOOLEXPR ')' M A   (rule 6)

    '(' 	shift, and go to state 46



state 16

    A  ->  '{' STMNTS . '}'   (rule 7)
    STMNTS  ->  STMNTS . M A   (rule 10)
    STMNTS  ->  STMNTS . error   (rule 12)

    error	shift, and go to state 18
    '}' 	shift, and go to state 47

    '-' 	reduce using rule 28 (M)
    INC 	reduce using rule 28 (M)
    DEC 	reduce using rule 28 (M)
    '(' 	reduce using rule 28 (M)
    IDEN	reduce using rule 28 (M)
    NUM 	reduce using rule 28 (M)
    IF  	reduce using rule 28 (M)

    M   	go to state 48



state 17

    STMNTS  ->  A M .   (rule 11)

    $default	reduce using rule 11 (STMNTS)



state 18

    STMNTS  ->  STMNTS error .   (rule 12)

    $default	reduce using rule 12 (STMNTS)



state 19

    S  ->  STMNTS M .   (rule 1)
    STMNTS  ->  STMNTS M . A   (rule 10)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $   	reduce using rule 1 (S)
    WHILE	[reduce using rule 1 (S)]
    $default	reduce using rule 63 (UN)

    A   	go to state 49
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 20

    A  ->  ASNEXPR ';' .   (rule 2)

    $default	reduce using rule 2 (A)



state 21

    A  ->  EXPR error .   (rule 9)

    $default	reduce using rule 9 (A)



state 22

    ASSGN  ->  PASN .   (rule 14)

    $default	reduce using rule 14 (ASSGN)



state 23

    ASSGN  ->  MASN .   (rule 15)

    $default	reduce using rule 15 (ASSGN)



state 24

    ASSGN  ->  DASN .   (rule 16)

    $default	reduce using rule 16 (ASSGN)



state 25

    ASSGN  ->  SASN .   (rule 17)

    $default	reduce using rule 17 (ASSGN)



state 26

    EXPR  ->  EXPR '+' . EXPR   (rule 31)
    OP  ->  '+' .   (rule 40)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 40 (OP)
    $default	reduce using rule 63 (UN)

    EXPR	go to state 50
    TERM	go to state 10
    UN  	go to state 11



state 27

    EXPR  ->  EXPR '-' . EXPR   (rule 32)
    OP  ->  '-' .   (rule 41)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 41 (OP)
    $default	reduce using rule 63 (UN)

    EXPR	go to state 51
    TERM	go to state 10
    UN  	go to state 11



state 28

    EXPR  ->  EXPR '/' . EXPR   (rule 34)
    OP  ->  '/' .   (rule 43)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 43 (OP)
    $default	reduce using rule 63 (UN)

    EXPR	go to state 52
    TERM	go to state 10
    UN  	go to state 11



state 29

    EXPR  ->  EXPR '*' . EXPR   (rule 33)
    OP  ->  '*' .   (rule 42)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 42 (OP)
    $default	reduce using rule 63 (UN)

    EXPR	go to state 53
    TERM	go to state 10
    UN  	go to state 11



state 30

    EXPR  ->  EXPR '%' . EXPR   (rule 35)
    OP  ->  '%' .   (rule 44)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 44 (OP)
    $default	reduce using rule 63 (UN)

    EXPR	go to state 54
    TERM	go to state 10
    UN  	go to state 11



state 31

    A  ->  EXPR ';' .   (rule 8)

    $default	reduce using rule 8 (A)



state 32

    ASSGN  ->  '=' .   (rule 13)

    $default	reduce using rule 13 (ASSGN)



state 33

    ASNEXPR  ->  EXPR ASSGN . EXPR   (rule 30)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 63 (UN)

    EXPR	go to state 55
    TERM	go to state 10
    UN  	go to state 11



state 34

    EXPR  ->  EXPR OP . ';'   (rule 38)

    ';' 	shift, and go to state 56



state 35

    TERM  ->  UN INC . NUM   (rule 49)
    OPR  ->  INC .   (rule 53)

    NUM 	shift, and go to state 57

    $default	reduce using rule 53 (OPR)



state 36

    TERM  ->  UN DEC . NUM   (rule 50)
    OPR  ->  DEC .   (rule 54)

    NUM 	shift, and go to state 58

    $default	reduce using rule 54 (OPR)



state 37

    TERM  ->  UN IDEN . OPR B   (rule 46)
    TERM  ->  UN IDEN . C   (rule 48)

    INC 	shift, and go to state 59
    DEC 	shift, and go to state 60
    IDEN	shift, and go to state 61
    NUM 	shift, and go to state 62

    $default	reduce using rule 61 (C)

    OPR 	go to state 63
    C   	go to state 64



state 38

    TERM  ->  UN NUM . C   (rule 47)
    TERM  ->  UN NUM . INC   (rule 51)
    TERM  ->  UN NUM . DEC   (rule 52)

    INC 	shift, and go to state 65
    DEC 	shift, and go to state 66
    IDEN	shift, and go to state 61
    NUM 	shift, and go to state 62

    $default	reduce using rule 61 (C)

    C   	go to state 67



state 39

    TERM  ->  UN OPR . IDEN B   (rule 45)

    IDEN	shift, and go to state 68



state 40

    EXPR  ->  '(' EXPR error .   (rule 37)

    $default	reduce using rule 37 (EXPR)



state 41

    EXPR  ->  '(' EXPR ')' .   (rule 36)

    $default	reduce using rule 36 (EXPR)



state 42

    BOOLEXPR  ->  TR .   (rule 26)

    $default	reduce using rule 26 (BOOLEXPR)



state 43

    BOOLEXPR  ->  FL .   (rule 27)

    $default	reduce using rule 27 (BOOLEXPR)



state 44

    A  ->  IF '(' BOOLEXPR . ')' M A   (rule 3)
    A  ->  IF '(' BOOLEXPR . ')' M A ELSE NN M A   (rule 4)
    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 18)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 19)

    OR  	shift, and go to state 69
    AND 	shift, and go to state 70
    ')' 	shift, and go to state 71



state 45

    BOOLEXPR  ->  EXPR . LT EXPR   (rule 20)
    BOOLEXPR  ->  EXPR . GT EXPR   (rule 21)
    BOOLEXPR  ->  EXPR . EQ EXPR   (rule 22)
    BOOLEXPR  ->  EXPR . NE EXPR   (rule 23)
    BOOLEXPR  ->  EXPR . LE EXPR   (rule 24)
    BOOLEXPR  ->  EXPR . GE EXPR   (rule 25)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    LT  	shift, and go to state 72
    GT  	shift, and go to state 73
    LE  	shift, and go to state 74
    GE  	shift, and go to state 75
    EQ  	shift, and go to state 76
    NE  	shift, and go to state 77
    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    OP  	go to state 34



state 46

    A  ->  WHILE M '(' . BOOLEXPR ')' M A   (rule 6)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    TR  	shift, and go to state 42
    FL  	shift, and go to state 43

    $default	reduce using rule 63 (UN)

    BOOLEXPR	go to state 78
    EXPR	go to state 45
    TERM	go to state 10
    UN  	go to state 11



state 47

    A  ->  '{' STMNTS '}' .   (rule 7)

    $default	reduce using rule 7 (A)



state 48

    STMNTS  ->  STMNTS M . A   (rule 10)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 63 (UN)

    A   	go to state 49
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 49

    STMNTS  ->  STMNTS M A .   (rule 10)

    $default	reduce using rule 10 (STMNTS)



state 50

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR '+' EXPR .   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 31 (EXPR)

    OP  	go to state 34



state 51

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR '-' EXPR .   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 32 (EXPR)

    OP  	go to state 34



state 52

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR '/' EXPR .   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)


    $default	reduce using rule 34 (EXPR)

    OP  	go to state 34



state 53

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR '*' EXPR .   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)


    $default	reduce using rule 33 (EXPR)

    OP  	go to state 34



state 54

    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR '%' EXPR .   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)


    $default	reduce using rule 35 (EXPR)

    OP  	go to state 34



state 55

    ASNEXPR  ->  EXPR ASSGN EXPR .   (rule 30)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 30 (ASNEXPR)

    OP  	go to state 34



state 56

    EXPR  ->  EXPR OP ';' .   (rule 38)

    $default	reduce using rule 38 (EXPR)



state 57

    TERM  ->  UN INC NUM .   (rule 49)

    $default	reduce using rule 49 (TERM)



state 58

    TERM  ->  UN DEC NUM .   (rule 50)

    $default	reduce using rule 50 (TERM)



state 59

    OPR  ->  INC .   (rule 53)

    $default	reduce using rule 53 (OPR)



state 60

    OPR  ->  DEC .   (rule 54)

    $default	reduce using rule 54 (OPR)



state 61

    C  ->  IDEN .   (rule 59)

    $default	reduce using rule 59 (C)



state 62

    C  ->  NUM .   (rule 60)

    $default	reduce using rule 60 (C)



state 63

    TERM  ->  UN IDEN OPR . B   (rule 46)

    INC 	shift, and go to state 59
    DEC 	shift, and go to state 60
    IDEN	shift, and go to state 79
    NUM 	shift, and go to state 80

    $default	reduce using rule 58 (B)

    OPR 	go to state 81
    B   	go to state 82



state 64

    TERM  ->  UN IDEN C .   (rule 48)

    $default	reduce using rule 48 (TERM)



state 65

    TERM  ->  UN NUM INC .   (rule 51)

    $default	reduce using rule 51 (TERM)



state 66

    TERM  ->  UN NUM DEC .   (rule 52)

    $default	reduce using rule 52 (TERM)



state 67

    TERM  ->  UN NUM C .   (rule 47)

    $default	reduce using rule 47 (TERM)



state 68

    TERM  ->  UN OPR IDEN . B   (rule 45)

    INC 	shift, and go to state 59
    DEC 	shift, and go to state 60
    IDEN	shift, and go to state 79
    NUM 	shift, and go to state 80

    $default	reduce using rule 58 (B)

    OPR 	go to state 81
    B   	go to state 83



state 69

    BOOLEXPR  ->  BOOLEXPR OR . M BOOLEXPR   (rule 18)

    $default	reduce using rule 28 (M)

    M   	go to state 84



state 70

    BOOLEXPR  ->  BOOLEXPR AND . M BOOLEXPR   (rule 19)

    $default	reduce using rule 28 (M)

    M   	go to state 85



state 71

    A  ->  IF '(' BOOLEXPR ')' . M A   (rule 3)
    A  ->  IF '(' BOOLEXPR ')' . M A ELSE NN M A   (rule 4)

    $default	reduce using rule 28 (M)

    M   	go to state 86



state 72

    BOOLEXPR  ->  EXPR LT . EXPR   (rule 20)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 63 (UN)

    EXPR	go to state 87
    TERM	go to state 10
    UN  	go to state 11



state 73

    BOOLEXPR  ->  EXPR GT . EXPR   (rule 21)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 63 (UN)

    EXPR	go to state 88
    TERM	go to state 10
    UN  	go to state 11



state 74

    BOOLEXPR  ->  EXPR LE . EXPR   (rule 24)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 63 (UN)

    EXPR	go to state 89
    TERM	go to state 10
    UN  	go to state 11



state 75

    BOOLEXPR  ->  EXPR GE . EXPR   (rule 25)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 63 (UN)

    EXPR	go to state 90
    TERM	go to state 10
    UN  	go to state 11



state 76

    BOOLEXPR  ->  EXPR EQ . EXPR   (rule 22)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 63 (UN)

    EXPR	go to state 91
    TERM	go to state 10
    UN  	go to state 11



state 77

    BOOLEXPR  ->  EXPR NE . EXPR   (rule 23)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 63 (UN)

    EXPR	go to state 92
    TERM	go to state 10
    UN  	go to state 11



state 78

    A  ->  WHILE M '(' BOOLEXPR . ')' M A   (rule 6)
    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 18)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 19)

    OR  	shift, and go to state 69
    AND 	shift, and go to state 70
    ')' 	shift, and go to state 93



state 79

    B  ->  IDEN .   (rule 56)

    $default	reduce using rule 56 (B)



state 80

    B  ->  NUM .   (rule 57)

    $default	reduce using rule 57 (B)



state 81

    B  ->  OPR .   (rule 55)

    $default	reduce using rule 55 (B)



state 82

    TERM  ->  UN IDEN OPR B .   (rule 46)

    $default	reduce using rule 46 (TERM)



state 83

    TERM  ->  UN OPR IDEN B .   (rule 45)

    $default	reduce using rule 45 (TERM)



state 84

    BOOLEXPR  ->  BOOLEXPR OR M . BOOLEXPR   (rule 18)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    TR  	shift, and go to state 42
    FL  	shift, and go to state 43

    $default	reduce using rule 63 (UN)

    BOOLEXPR	go to state 94
    EXPR	go to state 45
    TERM	go to state 10
    UN  	go to state 11



state 85

    BOOLEXPR  ->  BOOLEXPR AND M . BOOLEXPR   (rule 19)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    TR  	shift, and go to state 42
    FL  	shift, and go to state 43

    $default	reduce using rule 63 (UN)

    BOOLEXPR	go to state 95
    EXPR	go to state 45
    TERM	go to state 10
    UN  	go to state 11



state 86

    A  ->  IF '(' BOOLEXPR ')' M . A   (rule 3)
    A  ->  IF '(' BOOLEXPR ')' M . A ELSE NN M A   (rule 4)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 63 (UN)

    A   	go to state 96
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 87

    BOOLEXPR  ->  EXPR LT EXPR .   (rule 20)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 20 (BOOLEXPR)

    OP  	go to state 34



state 88

    BOOLEXPR  ->  EXPR GT EXPR .   (rule 21)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 21 (BOOLEXPR)

    OP  	go to state 34



state 89

    BOOLEXPR  ->  EXPR LE EXPR .   (rule 24)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 24 (BOOLEXPR)

    OP  	go to state 34



state 90

    BOOLEXPR  ->  EXPR GE EXPR .   (rule 25)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 25 (BOOLEXPR)

    OP  	go to state 34



state 91

    BOOLEXPR  ->  EXPR EQ EXPR .   (rule 22)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 22 (BOOLEXPR)

    OP  	go to state 34



state 92

    BOOLEXPR  ->  EXPR NE EXPR .   (rule 23)
    EXPR  ->  EXPR . '+' EXPR   (rule 31)
    EXPR  ->  EXPR . '-' EXPR   (rule 32)
    EXPR  ->  EXPR . '*' EXPR   (rule 33)
    EXPR  ->  EXPR . '/' EXPR   (rule 34)
    EXPR  ->  EXPR . '%' EXPR   (rule 35)
    EXPR  ->  EXPR . OP ';'   (rule 38)

    '+' 	shift, and go to state 26
    '-' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    '*' 	shift, and go to state 29
    '%' 	shift, and go to state 30

    $default	reduce using rule 23 (BOOLEXPR)

    OP  	go to state 34



state 93

    A  ->  WHILE M '(' BOOLEXPR ')' . M A   (rule 6)

    $default	reduce using rule 28 (M)

    M   	go to state 97



state 94

    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 18)
    BOOLEXPR  ->  BOOLEXPR OR M BOOLEXPR .   (rule 18)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 19)

    AND 	shift, and go to state 70

    $default	reduce using rule 18 (BOOLEXPR)



state 95

    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 18)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 19)
    BOOLEXPR  ->  BOOLEXPR AND M BOOLEXPR .   (rule 19)


    $default	reduce using rule 19 (BOOLEXPR)



state 96

    A  ->  IF '(' BOOLEXPR ')' M A .   (rule 3)
    A  ->  IF '(' BOOLEXPR ')' M A . ELSE NN M A   (rule 4)

    ELSE	shift, and go to state 98

    $default	reduce using rule 3 (A)



state 97

    A  ->  WHILE M '(' BOOLEXPR ')' M . A   (rule 6)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 63 (UN)

    A   	go to state 99
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 98

    A  ->  IF '(' BOOLEXPR ')' M A ELSE . NN M A   (rule 4)

    $default	reduce using rule 29 (NN)

    NN  	go to state 100



state 99

    A  ->  WHILE M '(' BOOLEXPR ')' M A .   (rule 6)

    $default	reduce using rule 6 (A)



state 100

    A  ->  IF '(' BOOLEXPR ')' M A ELSE NN . M A   (rule 4)

    $default	reduce using rule 28 (M)

    M   	go to state 101



state 101

    A  ->  IF '(' BOOLEXPR ')' M A ELSE NN M . A   (rule 4)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 63 (UN)

    A   	go to state 102
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 102

    A  ->  IF '(' BOOLEXPR ')' M A ELSE NN M A .   (rule 4)

    $default	reduce using rule 4 (A)



state 103

    $   	go to state 104



state 104

    $   	go to state 105



state 105

    $default	accept
