

Terminals which are not used:

   UMINUS


Conflict in state 52 between rule 34 and token '+' resolved as reduce.
Conflict in state 52 between rule 34 and token '-' resolved as reduce.
Conflict in state 52 between rule 34 and token '/' resolved as shift.
Conflict in state 52 between rule 34 and token '*' resolved as shift.
Conflict in state 52 between rule 34 and token '%' resolved as shift.
Conflict in state 53 between rule 35 and token '+' resolved as reduce.
Conflict in state 53 between rule 35 and token '-' resolved as reduce.
Conflict in state 53 between rule 35 and token '/' resolved as shift.
Conflict in state 53 between rule 35 and token '*' resolved as shift.
Conflict in state 53 between rule 35 and token '%' resolved as shift.
Conflict in state 54 between rule 37 and token '+' resolved as reduce.
Conflict in state 54 between rule 37 and token '-' resolved as reduce.
Conflict in state 54 between rule 37 and token '/' resolved as reduce.
Conflict in state 54 between rule 37 and token '*' resolved as reduce.
Conflict in state 54 between rule 37 and token '%' resolved as reduce.
Conflict in state 55 between rule 36 and token '+' resolved as reduce.
Conflict in state 55 between rule 36 and token '-' resolved as reduce.
Conflict in state 55 between rule 36 and token '/' resolved as reduce.
Conflict in state 55 between rule 36 and token '*' resolved as reduce.
Conflict in state 55 between rule 36 and token '%' resolved as reduce.
Conflict in state 56 between rule 38 and token '+' resolved as reduce.
Conflict in state 56 between rule 38 and token '-' resolved as reduce.
Conflict in state 56 between rule 38 and token '/' resolved as reduce.
Conflict in state 56 between rule 38 and token '*' resolved as reduce.
Conflict in state 56 between rule 38 and token '%' resolved as reduce.
Conflict in state 71 between rule 21 and token OR resolved as reduce.
Conflict in state 71 between rule 21 and token AND resolved as reduce.
Conflict in state 100 between rule 19 and token OR resolved as reduce.
Conflict in state 100 between rule 19 and token AND resolved as shift.
Conflict in state 101 between rule 20 and token OR resolved as reduce.
Conflict in state 101 between rule 20 and token AND resolved as reduce.
Conflict in state 102 between rule 3 and token ELSE resolved as shift.

Grammar
rule 1    S -> STMNTS M
rule 2    A -> ASNEXPR ';'
rule 3    A -> IF '(' BOOLEXPR ')' M A
rule 4    A -> IF '(' BOOLEXPR ')' M A ELSE NN M A
rule 5    A -> IF error
rule 6    A -> WHILE M '(' BOOLEXPR ')' M A
rule 7    A -> '{' STMNTS '}'
rule 8    A -> '{' '}'
rule 9    A -> EXPR ';'
rule 10   A -> EXPR error
rule 11   STMNTS -> STMNTS M A
rule 12   STMNTS -> A M
rule 13   STMNTS -> STMNTS error
rule 14   ASSGN -> '='
rule 15   ASSGN -> PASN
rule 16   ASSGN -> MASN
rule 17   ASSGN -> DASN
rule 18   ASSGN -> SASN
rule 19   BOOLEXPR -> BOOLEXPR OR M BOOLEXPR
rule 20   BOOLEXPR -> BOOLEXPR AND M BOOLEXPR
rule 21   BOOLEXPR -> '!' BOOLEXPR
rule 22   BOOLEXPR -> '(' BOOLEXPR ')'
rule 23   BOOLEXPR -> EXPR LT EXPR
rule 24   BOOLEXPR -> EXPR GT EXPR
rule 25   BOOLEXPR -> EXPR EQ EXPR
rule 26   BOOLEXPR -> EXPR NE EXPR
rule 27   BOOLEXPR -> EXPR LE EXPR
rule 28   BOOLEXPR -> EXPR GE EXPR
rule 29   BOOLEXPR -> TR
rule 30   BOOLEXPR -> FL
rule 31   M ->		/* empty */
rule 32   NN ->		/* empty */
rule 33   ASNEXPR -> EXPR ASSGN EXPR
rule 34   EXPR -> EXPR '+' EXPR
rule 35   EXPR -> EXPR '-' EXPR
rule 36   EXPR -> EXPR '*' EXPR
rule 37   EXPR -> EXPR '/' EXPR
rule 38   EXPR -> EXPR '%' EXPR
rule 39   EXPR -> '(' EXPR ')'
rule 40   EXPR -> EXPR OP ';'
rule 41   EXPR -> TERM
rule 42   OP -> '+'
rule 43   OP -> '-'
rule 44   OP -> '*'
rule 45   OP -> '/'
rule 46   OP -> '%'
rule 47   TERM -> UN OPR IDEN B
rule 48   TERM -> UN IDEN OPR B
rule 49   TERM -> UN NUM C
rule 50   TERM -> UN IDEN C
rule 51   TERM -> UN INC NUM
rule 52   TERM -> UN DEC NUM
rule 53   TERM -> UN NUM INC
rule 54   TERM -> UN NUM DEC
rule 55   OPR -> INC
rule 56   OPR -> DEC
rule 57   B -> OPR
rule 58   B -> IDEN
rule 59   B -> NUM
rule 60   B ->		/* empty */
rule 61   C -> IDEN
rule 62   C -> NUM
rule 63   C ->		/* empty */
rule 64   UN -> '-'
rule 65   UN ->		/* empty */

Terminals, with rules where they appear

$ (-1)
'!' (33) 21
'%' (37) 38 46
'(' (40) 3 4 6 22 39
')' (41) 3 4 6 22 39
'*' (42) 36 44
'+' (43) 34 42
'-' (45) 35 43 64
'/' (47) 37 45
';' (59) 2 9 40
'=' (61) 14
'{' (123) 7 8
'}' (125) 7 8
error (256) 5 10 13
PASN (258) 15
MASN (259) 16
DASN (260) 17
SASN (261) 18
OR (262) 19
AND (263) 20
LT (264) 23
GT (265) 24
LE (266) 27
GE (267) 28
EQ (268) 25
NE (269) 26
INC (270) 51 53 55
DEC (271) 52 54 56
UMINUS (272)
ELSE (273) 4
IDEN (274) 47 48 50 58 61
NUM (275) 49 51 52 53 54 59 62
IF (276) 3 4 5
TR (277) 29
FL (278) 30
WHILE (279) 6

Nonterminals, with rules where they appear

S (37)
    on left: 1
A (38)
    on left: 2 3 4 5 6 7 8 9 10, on right: 3 4 6 11 12
STMNTS (39)
    on left: 11 12 13, on right: 1 7 11 13
ASSGN (40)
    on left: 14 15 16 17 18, on right: 33
BOOLEXPR (41)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30, on right: 3 4 6 19
    20 21 22
M (42)
    on left: 31, on right: 1 3 4 6 11 12 19 20
NN (43)
    on left: 32, on right: 4
ASNEXPR (44)
    on left: 33, on right: 2
EXPR (45)
    on left: 34 35 36 37 38 39 40 41, on right: 9 10 23 24 25 26 27
    28 33 34 35 36 37 38 39 40
OP (46)
    on left: 42 43 44 45 46, on right: 40
TERM (47)
    on left: 47 48 49 50 51 52 53 54, on right: 41
OPR (48)
    on left: 55 56, on right: 47 48 57
B (49)
    on left: 57 58 59 60, on right: 47 48
C (50)
    on left: 61 62 63, on right: 49 50
UN (51)
    on left: 64 65, on right: 47 48 49 50 51 52 53 54


state 0

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 65 (UN)

    S   	go to state 109
    A   	go to state 6
    STMNTS	go to state 7
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 1

    UN  ->  '-' .   (rule 64)

    $default	reduce using rule 64 (UN)



state 2

    EXPR  ->  '(' . EXPR ')'   (rule 39)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 65 (UN)

    EXPR	go to state 12
    TERM	go to state 10
    UN  	go to state 11



state 3

    A  ->  IF . '(' BOOLEXPR ')' M A   (rule 3)
    A  ->  IF . '(' BOOLEXPR ')' M A ELSE NN M A   (rule 4)
    A  ->  IF . error   (rule 5)

    error	shift, and go to state 13
    '(' 	shift, and go to state 14



state 4

    A  ->  WHILE . M '(' BOOLEXPR ')' M A   (rule 6)

    $default	reduce using rule 31 (M)

    M   	go to state 15



state 5

    A  ->  '{' . STMNTS '}'   (rule 7)
    A  ->  '{' . '}'   (rule 8)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5
    '}' 	shift, and go to state 16

    $default	reduce using rule 65 (UN)

    A   	go to state 6
    STMNTS	go to state 17
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 6

    STMNTS  ->  A . M   (rule 12)

    $default	reduce using rule 31 (M)

    M   	go to state 18



state 7

    S  ->  STMNTS . M   (rule 1)
    STMNTS  ->  STMNTS . M A   (rule 11)
    STMNTS  ->  STMNTS . error   (rule 13)

    error	shift, and go to state 19

    $   	reduce using rule 31 (M)
    '-' 	reduce using rule 31 (M)
    INC 	reduce using rule 31 (M)
    DEC 	reduce using rule 31 (M)
    '(' 	reduce using rule 31 (M)
    IDEN	reduce using rule 31 (M)
    NUM 	reduce using rule 31 (M)
    IF  	reduce using rule 31 (M)
    FL  	reduce using rule 31 (M)

    M   	go to state 20



state 8

    A  ->  ASNEXPR . ';'   (rule 2)

    ';' 	shift, and go to state 21



state 9

    A  ->  EXPR . ';'   (rule 9)
    A  ->  EXPR . error   (rule 10)
    ASNEXPR  ->  EXPR . ASSGN EXPR   (rule 33)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    error	shift, and go to state 22
    PASN	shift, and go to state 23
    MASN	shift, and go to state 24
    DASN	shift, and go to state 25
    SASN	shift, and go to state 26
    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31
    ';' 	shift, and go to state 32
    '=' 	shift, and go to state 33

    ASSGN	go to state 34
    OP  	go to state 35



state 10

    EXPR  ->  TERM .   (rule 41)

    $default	reduce using rule 41 (EXPR)



state 11

    TERM  ->  UN . OPR IDEN B   (rule 47)
    TERM  ->  UN . IDEN OPR B   (rule 48)
    TERM  ->  UN . NUM C   (rule 49)
    TERM  ->  UN . IDEN C   (rule 50)
    TERM  ->  UN . INC NUM   (rule 51)
    TERM  ->  UN . DEC NUM   (rule 52)
    TERM  ->  UN . NUM INC   (rule 53)
    TERM  ->  UN . NUM DEC   (rule 54)

    INC 	shift, and go to state 36
    DEC 	shift, and go to state 37
    IDEN	shift, and go to state 38
    NUM 	shift, and go to state 39

    OPR 	go to state 40



state 12

    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  '(' EXPR . ')'   (rule 39)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31
    ')' 	shift, and go to state 41

    OP  	go to state 35



state 13

    A  ->  IF error .   (rule 5)

    $default	reduce using rule 5 (A)



state 14

    A  ->  IF '(' . BOOLEXPR ')' M A   (rule 3)
    A  ->  IF '(' . BOOLEXPR ')' M A ELSE NN M A   (rule 4)

    '!' 	shift, and go to state 42
    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 43
    TR  	shift, and go to state 44
    FL  	shift, and go to state 45

    $default	reduce using rule 65 (UN)

    BOOLEXPR	go to state 46
    EXPR	go to state 47
    TERM	go to state 10
    UN  	go to state 11



state 15

    A  ->  WHILE M . '(' BOOLEXPR ')' M A   (rule 6)

    '(' 	shift, and go to state 48



state 16

    A  ->  '{' '}' .   (rule 8)

    $default	reduce using rule 8 (A)



state 17

    A  ->  '{' STMNTS . '}'   (rule 7)
    STMNTS  ->  STMNTS . M A   (rule 11)
    STMNTS  ->  STMNTS . error   (rule 13)

    error	shift, and go to state 19
    '}' 	shift, and go to state 49

    '-' 	reduce using rule 31 (M)
    INC 	reduce using rule 31 (M)
    DEC 	reduce using rule 31 (M)
    '(' 	reduce using rule 31 (M)
    IDEN	reduce using rule 31 (M)
    NUM 	reduce using rule 31 (M)
    IF  	reduce using rule 31 (M)

    M   	go to state 50



state 18

    STMNTS  ->  A M .   (rule 12)

    $default	reduce using rule 12 (STMNTS)



state 19

    STMNTS  ->  STMNTS error .   (rule 13)

    $default	reduce using rule 13 (STMNTS)



state 20

    S  ->  STMNTS M .   (rule 1)
    STMNTS  ->  STMNTS M . A   (rule 11)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $   	reduce using rule 1 (S)
    FL  	reduce using rule 1 (S)
    $default	reduce using rule 65 (UN)

    A   	go to state 51
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 21

    A  ->  ASNEXPR ';' .   (rule 2)

    $default	reduce using rule 2 (A)



state 22

    A  ->  EXPR error .   (rule 10)

    $default	reduce using rule 10 (A)



state 23

    ASSGN  ->  PASN .   (rule 15)

    $default	reduce using rule 15 (ASSGN)



state 24

    ASSGN  ->  MASN .   (rule 16)

    $default	reduce using rule 16 (ASSGN)



state 25

    ASSGN  ->  DASN .   (rule 17)

    $default	reduce using rule 17 (ASSGN)



state 26

    ASSGN  ->  SASN .   (rule 18)

    $default	reduce using rule 18 (ASSGN)



state 27

    EXPR  ->  EXPR '+' . EXPR   (rule 34)
    OP  ->  '+' .   (rule 42)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 42 (OP)
    $default	reduce using rule 65 (UN)

    EXPR	go to state 52
    TERM	go to state 10
    UN  	go to state 11



state 28

    EXPR  ->  EXPR '-' . EXPR   (rule 35)
    OP  ->  '-' .   (rule 43)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 43 (OP)
    $default	reduce using rule 65 (UN)

    EXPR	go to state 53
    TERM	go to state 10
    UN  	go to state 11



state 29

    EXPR  ->  EXPR '/' . EXPR   (rule 37)
    OP  ->  '/' .   (rule 45)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 45 (OP)
    $default	reduce using rule 65 (UN)

    EXPR	go to state 54
    TERM	go to state 10
    UN  	go to state 11



state 30

    EXPR  ->  EXPR '*' . EXPR   (rule 36)
    OP  ->  '*' .   (rule 44)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 44 (OP)
    $default	reduce using rule 65 (UN)

    EXPR	go to state 55
    TERM	go to state 10
    UN  	go to state 11



state 31

    EXPR  ->  EXPR '%' . EXPR   (rule 38)
    OP  ->  '%' .   (rule 46)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    ';' 	reduce using rule 46 (OP)
    $default	reduce using rule 65 (UN)

    EXPR	go to state 56
    TERM	go to state 10
    UN  	go to state 11



state 32

    A  ->  EXPR ';' .   (rule 9)

    $default	reduce using rule 9 (A)



state 33

    ASSGN  ->  '=' .   (rule 14)

    $default	reduce using rule 14 (ASSGN)



state 34

    ASNEXPR  ->  EXPR ASSGN . EXPR   (rule 33)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 65 (UN)

    EXPR	go to state 57
    TERM	go to state 10
    UN  	go to state 11



state 35

    EXPR  ->  EXPR OP . ';'   (rule 40)

    ';' 	shift, and go to state 58



state 36

    TERM  ->  UN INC . NUM   (rule 51)
    OPR  ->  INC .   (rule 55)

    NUM 	shift, and go to state 59

    $default	reduce using rule 55 (OPR)



state 37

    TERM  ->  UN DEC . NUM   (rule 52)
    OPR  ->  DEC .   (rule 56)

    NUM 	shift, and go to state 60

    $default	reduce using rule 56 (OPR)



state 38

    TERM  ->  UN IDEN . OPR B   (rule 48)
    TERM  ->  UN IDEN . C   (rule 50)

    INC 	shift, and go to state 61
    DEC 	shift, and go to state 62
    IDEN	shift, and go to state 63
    NUM 	shift, and go to state 64

    $default	reduce using rule 63 (C)

    OPR 	go to state 65
    C   	go to state 66



state 39

    TERM  ->  UN NUM . C   (rule 49)
    TERM  ->  UN NUM . INC   (rule 53)
    TERM  ->  UN NUM . DEC   (rule 54)

    INC 	shift, and go to state 67
    DEC 	shift, and go to state 68
    IDEN	shift, and go to state 63
    NUM 	shift, and go to state 64

    $default	reduce using rule 63 (C)

    C   	go to state 69



state 40

    TERM  ->  UN OPR . IDEN B   (rule 47)

    IDEN	shift, and go to state 70



state 41

    EXPR  ->  '(' EXPR ')' .   (rule 39)

    $default	reduce using rule 39 (EXPR)



state 42

    BOOLEXPR  ->  '!' . BOOLEXPR   (rule 21)

    '!' 	shift, and go to state 42
    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 43
    TR  	shift, and go to state 44
    FL  	shift, and go to state 45

    $default	reduce using rule 65 (UN)

    BOOLEXPR	go to state 71
    EXPR	go to state 47
    TERM	go to state 10
    UN  	go to state 11



state 43

    BOOLEXPR  ->  '(' . BOOLEXPR ')'   (rule 22)
    EXPR  ->  '(' . EXPR ')'   (rule 39)

    '!' 	shift, and go to state 42
    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 43
    TR  	shift, and go to state 44
    FL  	shift, and go to state 45

    $default	reduce using rule 65 (UN)

    BOOLEXPR	go to state 72
    EXPR	go to state 73
    TERM	go to state 10
    UN  	go to state 11



state 44

    BOOLEXPR  ->  TR .   (rule 29)

    $default	reduce using rule 29 (BOOLEXPR)



state 45

    BOOLEXPR  ->  FL .   (rule 30)

    $default	reduce using rule 30 (BOOLEXPR)



state 46

    A  ->  IF '(' BOOLEXPR . ')' M A   (rule 3)
    A  ->  IF '(' BOOLEXPR . ')' M A ELSE NN M A   (rule 4)
    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 19)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 20)

    OR  	shift, and go to state 74
    AND 	shift, and go to state 75
    ')' 	shift, and go to state 76



state 47

    BOOLEXPR  ->  EXPR . LT EXPR   (rule 23)
    BOOLEXPR  ->  EXPR . GT EXPR   (rule 24)
    BOOLEXPR  ->  EXPR . EQ EXPR   (rule 25)
    BOOLEXPR  ->  EXPR . NE EXPR   (rule 26)
    BOOLEXPR  ->  EXPR . LE EXPR   (rule 27)
    BOOLEXPR  ->  EXPR . GE EXPR   (rule 28)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    LT  	shift, and go to state 77
    GT  	shift, and go to state 78
    LE  	shift, and go to state 79
    GE  	shift, and go to state 80
    EQ  	shift, and go to state 81
    NE  	shift, and go to state 82
    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    OP  	go to state 35



state 48

    A  ->  WHILE M '(' . BOOLEXPR ')' M A   (rule 6)

    '!' 	shift, and go to state 42
    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 43
    TR  	shift, and go to state 44
    FL  	shift, and go to state 45

    $default	reduce using rule 65 (UN)

    BOOLEXPR	go to state 83
    EXPR	go to state 47
    TERM	go to state 10
    UN  	go to state 11



state 49

    A  ->  '{' STMNTS '}' .   (rule 7)

    $default	reduce using rule 7 (A)



state 50

    STMNTS  ->  STMNTS M . A   (rule 11)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 65 (UN)

    A   	go to state 51
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 51

    STMNTS  ->  STMNTS M A .   (rule 11)

    $default	reduce using rule 11 (STMNTS)



state 52

    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR '+' EXPR .   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    $default	reduce using rule 34 (EXPR)

    OP  	go to state 35



state 53

    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR '-' EXPR .   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    $default	reduce using rule 35 (EXPR)

    OP  	go to state 35



state 54

    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR '/' EXPR .   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)


    $default	reduce using rule 37 (EXPR)

    OP  	go to state 35



state 55

    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR '*' EXPR .   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)


    $default	reduce using rule 36 (EXPR)

    OP  	go to state 35



state 56

    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR '%' EXPR .   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)


    $default	reduce using rule 38 (EXPR)

    OP  	go to state 35



state 57

    ASNEXPR  ->  EXPR ASSGN EXPR .   (rule 33)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    $default	reduce using rule 33 (ASNEXPR)

    OP  	go to state 35



state 58

    EXPR  ->  EXPR OP ';' .   (rule 40)

    $default	reduce using rule 40 (EXPR)



state 59

    TERM  ->  UN INC NUM .   (rule 51)

    $default	reduce using rule 51 (TERM)



state 60

    TERM  ->  UN DEC NUM .   (rule 52)

    $default	reduce using rule 52 (TERM)



state 61

    OPR  ->  INC .   (rule 55)

    $default	reduce using rule 55 (OPR)



state 62

    OPR  ->  DEC .   (rule 56)

    $default	reduce using rule 56 (OPR)



state 63

    C  ->  IDEN .   (rule 61)

    $default	reduce using rule 61 (C)



state 64

    C  ->  NUM .   (rule 62)

    $default	reduce using rule 62 (C)



state 65

    TERM  ->  UN IDEN OPR . B   (rule 48)

    INC 	shift, and go to state 61
    DEC 	shift, and go to state 62
    IDEN	shift, and go to state 84
    NUM 	shift, and go to state 85

    $default	reduce using rule 60 (B)

    OPR 	go to state 86
    B   	go to state 87



state 66

    TERM  ->  UN IDEN C .   (rule 50)

    $default	reduce using rule 50 (TERM)



state 67

    TERM  ->  UN NUM INC .   (rule 53)

    $default	reduce using rule 53 (TERM)



state 68

    TERM  ->  UN NUM DEC .   (rule 54)

    $default	reduce using rule 54 (TERM)



state 69

    TERM  ->  UN NUM C .   (rule 49)

    $default	reduce using rule 49 (TERM)



state 70

    TERM  ->  UN OPR IDEN . B   (rule 47)

    INC 	shift, and go to state 61
    DEC 	shift, and go to state 62
    IDEN	shift, and go to state 84
    NUM 	shift, and go to state 85

    $default	reduce using rule 60 (B)

    OPR 	go to state 86
    B   	go to state 88



state 71

    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 19)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 20)
    BOOLEXPR  ->  '!' BOOLEXPR .   (rule 21)


    $default	reduce using rule 21 (BOOLEXPR)



state 72

    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 19)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 20)
    BOOLEXPR  ->  '(' BOOLEXPR . ')'   (rule 22)

    OR  	shift, and go to state 74
    AND 	shift, and go to state 75
    ')' 	shift, and go to state 89



state 73

    BOOLEXPR  ->  EXPR . LT EXPR   (rule 23)
    BOOLEXPR  ->  EXPR . GT EXPR   (rule 24)
    BOOLEXPR  ->  EXPR . EQ EXPR   (rule 25)
    BOOLEXPR  ->  EXPR . NE EXPR   (rule 26)
    BOOLEXPR  ->  EXPR . LE EXPR   (rule 27)
    BOOLEXPR  ->  EXPR . GE EXPR   (rule 28)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  '(' EXPR . ')'   (rule 39)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    LT  	shift, and go to state 77
    GT  	shift, and go to state 78
    LE  	shift, and go to state 79
    GE  	shift, and go to state 80
    EQ  	shift, and go to state 81
    NE  	shift, and go to state 82
    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31
    ')' 	shift, and go to state 41

    OP  	go to state 35



state 74

    BOOLEXPR  ->  BOOLEXPR OR . M BOOLEXPR   (rule 19)

    $default	reduce using rule 31 (M)

    M   	go to state 90



state 75

    BOOLEXPR  ->  BOOLEXPR AND . M BOOLEXPR   (rule 20)

    $default	reduce using rule 31 (M)

    M   	go to state 91



state 76

    A  ->  IF '(' BOOLEXPR ')' . M A   (rule 3)
    A  ->  IF '(' BOOLEXPR ')' . M A ELSE NN M A   (rule 4)

    $default	reduce using rule 31 (M)

    M   	go to state 92



state 77

    BOOLEXPR  ->  EXPR LT . EXPR   (rule 23)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 65 (UN)

    EXPR	go to state 93
    TERM	go to state 10
    UN  	go to state 11



state 78

    BOOLEXPR  ->  EXPR GT . EXPR   (rule 24)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 65 (UN)

    EXPR	go to state 94
    TERM	go to state 10
    UN  	go to state 11



state 79

    BOOLEXPR  ->  EXPR LE . EXPR   (rule 27)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 65 (UN)

    EXPR	go to state 95
    TERM	go to state 10
    UN  	go to state 11



state 80

    BOOLEXPR  ->  EXPR GE . EXPR   (rule 28)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 65 (UN)

    EXPR	go to state 96
    TERM	go to state 10
    UN  	go to state 11



state 81

    BOOLEXPR  ->  EXPR EQ . EXPR   (rule 25)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 65 (UN)

    EXPR	go to state 97
    TERM	go to state 10
    UN  	go to state 11



state 82

    BOOLEXPR  ->  EXPR NE . EXPR   (rule 26)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 65 (UN)

    EXPR	go to state 98
    TERM	go to state 10
    UN  	go to state 11



state 83

    A  ->  WHILE M '(' BOOLEXPR . ')' M A   (rule 6)
    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 19)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 20)

    OR  	shift, and go to state 74
    AND 	shift, and go to state 75
    ')' 	shift, and go to state 99



state 84

    B  ->  IDEN .   (rule 58)

    $default	reduce using rule 58 (B)



state 85

    B  ->  NUM .   (rule 59)

    $default	reduce using rule 59 (B)



state 86

    B  ->  OPR .   (rule 57)

    $default	reduce using rule 57 (B)



state 87

    TERM  ->  UN IDEN OPR B .   (rule 48)

    $default	reduce using rule 48 (TERM)



state 88

    TERM  ->  UN OPR IDEN B .   (rule 47)

    $default	reduce using rule 47 (TERM)



state 89

    BOOLEXPR  ->  '(' BOOLEXPR ')' .   (rule 22)

    $default	reduce using rule 22 (BOOLEXPR)



state 90

    BOOLEXPR  ->  BOOLEXPR OR M . BOOLEXPR   (rule 19)

    '!' 	shift, and go to state 42
    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 43
    TR  	shift, and go to state 44
    FL  	shift, and go to state 45

    $default	reduce using rule 65 (UN)

    BOOLEXPR	go to state 100
    EXPR	go to state 47
    TERM	go to state 10
    UN  	go to state 11



state 91

    BOOLEXPR  ->  BOOLEXPR AND M . BOOLEXPR   (rule 20)

    '!' 	shift, and go to state 42
    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 43
    TR  	shift, and go to state 44
    FL  	shift, and go to state 45

    $default	reduce using rule 65 (UN)

    BOOLEXPR	go to state 101
    EXPR	go to state 47
    TERM	go to state 10
    UN  	go to state 11



state 92

    A  ->  IF '(' BOOLEXPR ')' M . A   (rule 3)
    A  ->  IF '(' BOOLEXPR ')' M . A ELSE NN M A   (rule 4)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 65 (UN)

    A   	go to state 102
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 93

    BOOLEXPR  ->  EXPR LT EXPR .   (rule 23)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    $default	reduce using rule 23 (BOOLEXPR)

    OP  	go to state 35



state 94

    BOOLEXPR  ->  EXPR GT EXPR .   (rule 24)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    $default	reduce using rule 24 (BOOLEXPR)

    OP  	go to state 35



state 95

    BOOLEXPR  ->  EXPR LE EXPR .   (rule 27)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    $default	reduce using rule 27 (BOOLEXPR)

    OP  	go to state 35



state 96

    BOOLEXPR  ->  EXPR GE EXPR .   (rule 28)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    $default	reduce using rule 28 (BOOLEXPR)

    OP  	go to state 35



state 97

    BOOLEXPR  ->  EXPR EQ EXPR .   (rule 25)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    $default	reduce using rule 25 (BOOLEXPR)

    OP  	go to state 35



state 98

    BOOLEXPR  ->  EXPR NE EXPR .   (rule 26)
    EXPR  ->  EXPR . '+' EXPR   (rule 34)
    EXPR  ->  EXPR . '-' EXPR   (rule 35)
    EXPR  ->  EXPR . '*' EXPR   (rule 36)
    EXPR  ->  EXPR . '/' EXPR   (rule 37)
    EXPR  ->  EXPR . '%' EXPR   (rule 38)
    EXPR  ->  EXPR . OP ';'   (rule 40)

    '+' 	shift, and go to state 27
    '-' 	shift, and go to state 28
    '/' 	shift, and go to state 29
    '*' 	shift, and go to state 30
    '%' 	shift, and go to state 31

    $default	reduce using rule 26 (BOOLEXPR)

    OP  	go to state 35



state 99

    A  ->  WHILE M '(' BOOLEXPR ')' . M A   (rule 6)

    $default	reduce using rule 31 (M)

    M   	go to state 103



state 100

    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 19)
    BOOLEXPR  ->  BOOLEXPR OR M BOOLEXPR .   (rule 19)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 20)

    AND 	shift, and go to state 75

    $default	reduce using rule 19 (BOOLEXPR)



state 101

    BOOLEXPR  ->  BOOLEXPR . OR M BOOLEXPR   (rule 19)
    BOOLEXPR  ->  BOOLEXPR . AND M BOOLEXPR   (rule 20)
    BOOLEXPR  ->  BOOLEXPR AND M BOOLEXPR .   (rule 20)


    $default	reduce using rule 20 (BOOLEXPR)



state 102

    A  ->  IF '(' BOOLEXPR ')' M A .   (rule 3)
    A  ->  IF '(' BOOLEXPR ')' M A . ELSE NN M A   (rule 4)

    ELSE	shift, and go to state 104

    $default	reduce using rule 3 (A)



state 103

    A  ->  WHILE M '(' BOOLEXPR ')' M . A   (rule 6)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 65 (UN)

    A   	go to state 105
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 104

    A  ->  IF '(' BOOLEXPR ')' M A ELSE . NN M A   (rule 4)

    $default	reduce using rule 32 (NN)

    NN  	go to state 106



state 105

    A  ->  WHILE M '(' BOOLEXPR ')' M A .   (rule 6)

    $default	reduce using rule 6 (A)



state 106

    A  ->  IF '(' BOOLEXPR ')' M A ELSE NN . M A   (rule 4)

    $default	reduce using rule 31 (M)

    M   	go to state 107



state 107

    A  ->  IF '(' BOOLEXPR ')' M A ELSE NN M . A   (rule 4)

    '-' 	shift, and go to state 1
    '(' 	shift, and go to state 2
    IF  	shift, and go to state 3
    WHILE	shift, and go to state 4
    '{' 	shift, and go to state 5

    $default	reduce using rule 65 (UN)

    A   	go to state 108
    ASNEXPR	go to state 8
    EXPR	go to state 9
    TERM	go to state 10
    UN  	go to state 11



state 108

    A  ->  IF '(' BOOLEXPR ')' M A ELSE NN M A .   (rule 4)

    $default	reduce using rule 4 (A)



state 109

    $   	go to state 110



state 110

    $   	go to state 111



state 111

    $default	accept
